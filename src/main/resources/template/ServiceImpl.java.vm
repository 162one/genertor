package ${package}.${moduleName}.service.impl;


import com.alibaba.fastjson.JSON;
import com.baomidou.dynamic.datasource.annotation.DS;

import com.hd.common.util.PageBean;
import com.hd.common.util.PageParam;
import lombok.extern.slf4j.Slf4j;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

import ${package}.${moduleName}.mapper.${className}Mapper;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.facade.${className}Facade;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Service
@Slf4j
@DS("${moduleName}")
public class ${className}FacadeImpl implements ${className}Facade {

    @Resource
    private ${className}Mapper ${classname}Mapper;

    /**
     * ${comments}列表信息
     *
     * @param pageParam
     * @return 结果
     */
    @Override
    public PageBean<${className}> page(PageParam pageParam) {

        log.info("${className}FacadeImpl.page:入参：pageParam:{}", JSON.toJSON(pageParam));
        pageParam.startPage();
        List<${className}> ${classname}List = ${classname}Mapper.page();
        PageBean<${className}> ${classname}PageBean = new PageBean<>(${classname}List);
        return ${classname}PageBean;
    }

    /**
     * ${comments}详细信息
     *
     * @param ${pk.attrname} ${comments}ID
     * @return 结果
     */
    @Override
    public ${className} info(Long ${pk.attrname}) {

        log.info("${className}FacadeImpl.info:入参：${pk.attrname}:{}", ${pk.attrname});
        ${className} ${classname} =${classname}Mapper.selectByPrimaryKey(${pk.attrname});
        return ${classname};
    }

    /**
     * 保存${comments}信息
     *
     * @param ${classname}
     * @return 结果
     */
    @Override
    public void insert(${className} ${classname}) {

        log.info("${className}FacadeImpl.insert:入参：${classname}:{}", JSON.toJSON(${classname}));
        ${classname}Mapper.insertSelective(${classname});
    }

    /**
     * 修改${comments}信息
     *
     * @param ${classname}
     * @return 结果
     */
    @Override
    public void update(${className} ${classname}) {
        log.info("${className}FacadeImpl.update:入参：${classname}:{}", JSON.toJSON(${classname}));
        ${classname}Mapper.updateByPrimaryKeySelective(${classname});
    }

    /**
     * 删除${comments}信息
     *
     * @param ${pk.attrname} 需要删除的${comments}ID
     * @return 结果
     */
    @Override
    public void deleteById(Long ${pk.attrname}s) {

        log.info("${className}FacadeImpl.deleteById:入参：${pk.attrname}:{}", JSON.toJSON(${pk.attrname}));
        ${classname}Mapper.deleteByPrimaryKey(${pk.attrname});
    }

}
