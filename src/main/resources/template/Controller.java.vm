package ${package}.${moduleName}.controller;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import com.hd.web.common.util.BaseResult;
import com.hd.web.common.util.WebBaseController;
import org.springframework.validation.annotation.Validated;
import com.hd.common.util.PageBean;
import com.hd.common.util.PageParam;

import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.facade.${className}Facade;

/**
 * ${comments}管理
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${pathName}")
@Api(tags = "${comments}管理")
public class ${className}Controller extends WebBaseController {

    @Resource
    private ${className}Facade ${classname}Facade;

    /**
     * ${comments}列表
     *
     * @param pageParam
     * @return
     */
    @PostMapping("/page")
    @ApiOperation("${comments}列表")
    public BaseResult<PageBean<${className}>> page(@RequestBody @Validated PageParam pageParam) {

        PageBean<${className}> ${classname} = ${classname}Facade.page(pageParam);
        return BaseResult.success(${classname});
    }

    /**
     * ${comments}信息
     *
     * @param ${pk.attrname}
     * @return
     */
    @GetMapping("/{${pk.attrname}}")
    @ApiOperation("${comments}信息")
    @ApiImplicitParam(name = "${pk.attrname}", value = "${comments}Id", required = true, paramType = "query", dataType = "Long")
    public BaseResult<${className}> info(@PathVariable Long ${pk.attrname}){

        ${className} ${classname} = ${classname}Facade.info(${pk.attrname});
        return BaseResult.success(${classname});
    }

    /**
     * 保存${comments}信息
     *
     * @param ${classname}
     * @return
     */
    @PostMapping("/save")
    @ApiOperation("保存${comments}信息")
    public BaseResult save(@RequestBody @Validated ${className} ${classname}){

        ${classname}Facade.insert(${classname}, getUser());
        return BaseResult.success();
    }

    /**
     * 修改${comments}信息
     */
    @PostMapping("/update")
    @ApiOperation("修改${comments}信息")
    public BaseResult update(@RequestBody @Validated ${className} ${classname}){

        ${classname}Facade.update(${classname}, getUser());
        return BaseResult.success();
    }

    /**
     * 删除${comments}信息
     */
    @PostMapping("/delete/{${pk.attrname}}")
    @ApiOperation("删除${comments}信息")
    public BaseResult delete(@PathVariable Long ${pk.attrname}){

        ${classname}Facade.deleteById(${pk.attrname});
        return BaseResult.success();
    }
}
